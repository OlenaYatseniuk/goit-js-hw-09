{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAbSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAezB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAc,CAClBb,MAAOc,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC1CC,KAAMJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACxCE,OAAQL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,QAE9CN,EAAMI,OAAOK,QACb,MAAMpB,MAAEA,EAAKkB,KAAEA,EAAIC,OAAEA,GAAWN,GAIlC,SAA0BQ,EAAOH,EAAMC,GACrC,GAAIA,EAAS,EACX,OAAOvB,EAAA0B,OAAOC,QAAQ,+BAEtB,IAAG,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EACtB,IAANA,EACF1B,EAAc0B,EAAGH,GACdI,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOI,QAAQ,uBAAqB3B,QAAiBC,UAEtD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOC,QAAQ,sBAAoBxB,QAAiBC,UAGxDF,EAAc0B,EAAIH,GAASH,GACxBO,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOI,QAAQ,uBAAqB3B,QAAiBC,UAEtD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOC,QAAQ,sBAAoBxB,QAAeC,UAtB1D4B,CAAiB5B,EAAOkB,EAAMC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const inputValues = {\n    delay: Number(event.target.elements.delay.value),\n    step: Number(event.target.elements.step.value),\n    amount: Number(event.target.elements.amount.value),\n  };\n  event.target.reset();\n  const { delay, step, amount } = inputValues;\n  generatePromises(delay, step, amount);\n}\n\nfunction generatePromises(delay, step, amount) {\n  if (amount < 0) {\n    return Notify.failure(`❌ Choose option > 0, please`);\n  }\n  for (let i = 1; i <= amount; i += 1) {\n    if (i === 1) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      createPromise(i, (delay += step))\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","inputValues","Number","target","elements","value","step","amount","reset","delay1","Notify","failure","i","then","success","catch","$47d4ff9957288465$var$generatePromises"],"version":3,"file":"03-promises.27c4ebc9.js.map"}